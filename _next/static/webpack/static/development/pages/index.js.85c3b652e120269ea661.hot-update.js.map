{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.85c3b652e120269ea661.hot-update.js","sources":["webpack:///./src/babel/import-resolver-plugin.js"],"sourcesContent":["export const resolverId = \"__resolverFn__\"\n\nconst createVariableDeclaration = (t, specifier, source) =>\n  t.variableDeclaration(\"const\", [\n    t.variableDeclarator(\n      t.identifier(specifier.local.name),\n      t.callExpression(t.identifier(resolverId), [t.stringLiteral(source.value)]),\n    ),\n  ])\n\nconst createDeclaration = (t, specifier, source) =>\n  t.variableDeclaration(\"const\", [\n    t.variableDeclarator(\n      t.identifier(t.identifier(specifier.local.name)),\n      t.callExpression(t.identifier(resolverId), [t.stringLiteral(source.value)]),\n    ),\n  ])\n\nconst importResolverPlugin = ({ types: t }) => ({\n  visitor: {\n    ImportDeclaration: path => {\n      const replacements = path.node.specifiers.map(specifier => {\n        if (t.isImportDefaultSpecifier(specifier) || t.isImportNamespaceSpecifier(specifier)) {\n          return createVariableDeclaration(t, specifier, path.node.source)\n        }\n\n        if (t.isImportSpecifier(specifier)) {\n          return createDeclaration(t, specifier, path.node.source)\n        }\n\n        return null\n      })\n\n      path.replaceWithMultiple(replacements)\n    },\n  },\n})\n\nexport default importResolverPlugin\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAfA;AADA;AAAA;AACA;AAmBA;;;;A","sourceRoot":""}